# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: running-app
  labels:
    app: running-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: running-app
  template:
    metadata:
      labels:
        app: running-app
    spec:
      containers:
      - name: running-app
        image: running-app:latest
        imagePullPolicy: Never  # For local development
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          value: "3000"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: running-app-service
  labels:
    app: running-app
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    nodePort: 30080
  selector:
    app: running-app

---
# ConfigMap for nginx (optional reverse proxy)
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream running-app {
            server running-app-service:80;
        }
        
        server {
            listen 80;
            server_name localhost;
            
            location / {
                proxy_pass http://running-app;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }